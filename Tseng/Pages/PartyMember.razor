@page "/party/{num:int}"

@using Tseng.Models
@using Tseng.Services
@using System.ComponentModel
@using Tseng.Components.Character
@using Tseng.Models.Active

@inject IGameService GameService;

@if (!_isLoading)
{
    switch (Num)
    {
        case 1:
            <CharacterProfile PartyMember="@Party1" HasData="@(Party1.Level != 0)"/>
            break;
        case 2:
            <CharacterProfile PartyMember="@Party2" HasData="@(Party2.Level != 0)"/>
            break;
        case 3:
            <CharacterProfile PartyMember="@Party3" HasData="@(Party3.Level != 0)"/>
            break;
    }
}
@code {
    [Parameter] public int Num { get; set; }

    bool _isLoading;
    
    GameData? _gameData;
    Character Party1 => _gameData?.ActiveData.Party1 ?? new();
    Character Party2 => _gameData?.ActiveData.Party2 ?? new();
    Character Party3 => _gameData?.ActiveData.Party3 ?? new();


    protected override async Task OnInitializedAsync()
    {
        if (_isLoading) return;

        _isLoading = true;
        _gameData = GameService.GameData;
        GameService.GameData.PropertyChanged += OnGameDataOnPropertyChanged;


        var tokenSource = new CancellationTokenSource();

        await GameService.StartMonitoring(tokenSource.Token);
        _isLoading = false;

    }

    private async void OnGameDataOnPropertyChanged(object? o, PropertyChangedEventArgs propertyChangedEventArgs)
    {
        await InvokeAsync(StateHasChanged);
    }
}